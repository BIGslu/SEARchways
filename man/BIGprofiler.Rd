% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/BIGprofiler.R
\name{BIGprofiler}
\alias{BIGprofiler}
\title{Title}
\usage{
BIGprofiler(
  gene_list = NULL,
  gene_df = NULL,
  ID = "SYMBOL",
  species = "human",
  category = NULL,
  subcategory = NULL,
  db = NULL
)
}
\arguments{
\item{gene_list}{Named list object with named numeric vectors of gene symbols and logFC}

\item{gene_df}{Data frame including variable/module groups (column 1: group) and gene name (column2: gene). Can be used instead of gene_list}

\item{ID}{Character string for type of ID used in gene_list. One of SYMBOL, ENTREZ, ENSEMBL. Default is SYMBOL}

\item{species}{Character string denoting species of interest. Default is human}

\item{category}{Character string denoting Broad gene set database}

\item{subcategory}{Character string denoting Broad gene set sub-database \cr
\tabular{rrrrr}{
\strong{category} \tab    \strong{subcategory}\cr
C1  \tab      \cr
C2  \tab      CGP\cr
C2  \tab      CP\cr
C2  \tab      CP:BIOCARTA\cr
C2  \tab      CP:KEGG\cr
C2  \tab      CP:PID\cr
C2  \tab      CP:REACTOME\cr
C2  \tab      CP:WIKIPATHWAYS\cr
C3  \tab      \cr
C5  \tab      GO:BP\cr
C5  \tab      GO:CC\cr
C5  \tab      GO:MF\cr
C5  \tab      HPO\cr
C6  \tab      \cr
H   \tab      \cr
}}

\item{db}{If not using Broad databases, a data frame with gene ontology including gene set name (column 1: gs_name) and gene ID (column2: gene_symbol, entrez_gene, or ensembl_gene as matches your gene_list names)}
}
\value{
Data frame of enrichments including pathway, significance, and genes in pathway
}
\description{
Title
}
\examples{
#Get gene names for enrichment
gene_list <- list(HRV1 = names(example_gene_list[[1]]),
                  HRV2 = names(example_gene_list[[2]]))
BIGprofiler(gene_list, ID="ENSEMBL", category="H")

# Use gene_df
gene_df <- data.frame(gs_name = c(rep("HRV1", 100), rep("HRV2",100)),
                      gene = c(names(example_gene_list[[1]]),
                               names(example_gene_list[[2]])))
BIGprofiler(gene_df=gene_df, ID="ENSEMBL", category="H")

#Use custom data base
db <- data.frame(module = c(rep("module1",10), rep("module2",10)),
                 symbol = sample(gene_list[[1]], 20))

BIGprofiler(gene_list, ID="ENSEMBL", db=db)
}
